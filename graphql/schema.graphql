scalar AWSTime
scalar AWSDateTime
scalar AWSTimestamp
scalar AWSEmail
scalar AWSJSON
scalar AWSURL
scalar AWSPhone
scalar AWSIPAddress

directive @aws_subscribe(mutations: [String!]!) on FIELD_DEFINITION
directive @aws_auth(cognito_groups: [String!]!) on FIELD_DEFINITION
directive @aws_api_key on FIELD_DEFINITION | OBJECT
directive @aws_iam on FIELD_DEFINITION | OBJECT
directive @aws_oidc on FIELD_DEFINITION | OBJECT
directive @aws_cognito_user_pools(
  cognito_groups: [String!]
) on FIELD_DEFINITION | OBJECT

type Mutation {
    createGame(input: CreateGameInput!): GameSummary! @aws_cognito_user_pools(cognito_groups: ["CreateGame"])
    joinGame(input: JoinGameInput!): PlayerSheetSummary! @aws_cognito_user_pools
    updateGame(input: UpdateGameInput!): GameSummary! @aws_cognito_user_pools
    deleteGame(input: DeleteGameInput!): GameSummary! @aws_cognito_user_pools
    createSection(input: CreateSectionInput!): SheetSection! @aws_cognito_user_pools
    updateSection(input: UpdateSectionInput!): SheetSection! @aws_cognito_user_pools
    deleteSection(input: DeleteSectionInput!): SheetSection! @aws_cognito_user_pools
    updatePlayer(input: UpdatePlayerInput!): PlayerSheetSummary @aws_cognito_user_pools
    deletePlayer(input: DeletePlayerInput!): PlayerSheetSummary @aws_cognito_user_pools @aws_iam
    createShip(input: CreateShipInput!): PlayerSheetSummary! @aws_cognito_user_pools
}

type Query {
    getGame(input: GetGameInput): Game! @aws_cognito_user_pools
    getGames: [PlayerSheetSummary!] @aws_cognito_user_pools
}

type Subscription @aws_cognito_user_pools {
  updatedPlayer(gameId: ID!): PlayerSheetSummary @aws_subscribe(mutations: ["updatePlayer", "deletePlayer", "createShip", "joinGame"])
  updatedSection(gameId: ID!): SheetSection @aws_subscribe(mutations: ["createSection", "updateSection", "deleteSection"])
  updatedGame(gameId: ID!): GameSummary @aws_subscribe(mutations: ["updateGame", "deleteGame"])
}

input GetGameInput {
  gameId: ID!
}

input CreateGameInput {
    name: String!
    description: String
}

input JoinGameInput {
  gameId: ID!
  joinToken: ID!
}

input DeleteGameInput {
  gameId: ID!
}

input UpdateGameInput {
  gameId: ID!
  name: String!
  description: String
}

input DeletePlayerInput {
  gameId: ID!
  userId: ID!
}

input CreateSectionInput {
  userId: ID
  gameId: ID!
  sectionName: String!
  sectionType: String!
  content: AWSJSON
  position: Int!
}

input UpdateSectionInput {
  gameId: ID!
  sectionId: ID!
  sectionName: String
  content: AWSJSON
  position: Int
}

input DeleteSectionInput {
  gameId: ID!
  sectionId: ID!
}

type GameSummary @aws_cognito_user_pools {
  gameId: ID!
  gameName: String!
  gameDescription: String
  fireflyUserId: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  type: String!
  deleted: Boolean
}

type Game @aws_cognito_user_pools {
  gameId: ID!
  gameName: String!
  gameDescription: String
  playerSheets: [PlayerSheet!]!
  joinToken: String
  fireflyUserId: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  type: String!
  deleted: Boolean
}

input UpdatePlayerInput {
  gameId: ID!
  userId: ID!
  characterName: String!
}

input CreateShipInput {
  gameId: ID!
  characterName: String!
}

type PlayerSheetSummary @aws_cognito_user_pools @aws_iam {
  userId: ID!
  gameId: ID!
  gameName: String!
  gameDescription: String!
  characterName: String!
  type: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  deleted: Boolean
}

type PlayerSheet @aws_cognito_user_pools {
  userId: ID!
  gameId: ID!
  characterName: String!
  sections: [SheetSection!]!
  type: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  fireflyUserId: ID!
}

type SheetSection @aws_cognito_user_pools {
  userId: ID!
  gameId: ID!
  sectionId: ID!
  type: String!
  sectionName: String!
  sectionType: String!
  content: AWSJSON!
  position: Int!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  deleted: Boolean
}
