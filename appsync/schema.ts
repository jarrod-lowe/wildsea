// Code generated by make-schema. DO NOT EDIT
    
      export const getGameQuery = `
        query getGame($input: GetGameInput!) {
          getGame(input: $input) {
            gameId gameName gameType gameDescription playerSheets { userId gameId characterName sections { userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted assets } type createdAt updatedAt gmUserId remainingSections } joinCode gmUserId createdAt updatedAt type deleted theme remainingCharacters remainingSections remainingAssets
          }
        }
      `;
    
      export const getGamesQuery = `
        query getGames {
          getGames {
            games { userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted remainingSections } remainingGames totalQuota
          }
        }
      `;
    
      export const getGameTypesQuery = `
        query getGameTypes($input: GetGameTypesInput!) {
          getGameTypes(input: $input) {
            gameType displayName language
          }
        }
      `;
    
      export const getCharacterTemplatesQuery = `
        query getCharacterTemplates($input: GetCharacterTemplatesInput!) {
          getCharacterTemplates(input: $input) {
            templateName displayName gameType language
          }
        }
      `;
    
      export const getCharacterTemplateQuery = `
        query getCharacterTemplate($input: GetCharacterTemplateInput!) {
          getCharacterTemplate(input: $input) {
            sectionName sectionType content position
          }
        }
      `;
    
      export const getGamePresetsQuery = `
        query getGamePresets($input: GetGamePresetsInput!) {
          getGamePresets(input: $input) {
            displayName data language
          }
        }
      `;
    
      export const getUserSettingsQuery = `
        query getUserSettings {
          getUserSettings {
            userId settings type createdAt updatedAt
          }
        }
      `;
    
      export const getSystemNotificationQuery = `
        query getSystemNotification {
          getSystemNotification {
            message urgent type createdAt updatedAt
          }
        }
      `;
    

    
      export const createGameMutation = `
        mutation createGame($input: CreateGameInput!) {
          createGame(input: $input) {
            gameId gameName gameType gameDescription joinCode gmUserId createdAt updatedAt type deleted theme remainingCharacters remainingSections remainingAssets
          }
        }
      `;
    
      export const joinGameMutation = `
        mutation joinGame($input: JoinGameInput!) {
          joinGame(input: $input) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted remainingSections
          }
        }
      `;
    
      export const updateGameMutation = `
        mutation updateGame($input: UpdateGameInput!) {
          updateGame(input: $input) {
            gameId gameName gameType gameDescription joinCode gmUserId createdAt updatedAt type deleted theme remainingCharacters remainingSections remainingAssets
          }
        }
      `;
    
      export const deleteGameMutation = `
        mutation deleteGame($input: DeleteGameInput!) {
          deleteGame(input: $input) {
            gameId gameName gameType gameDescription joinCode gmUserId createdAt updatedAt type deleted theme remainingCharacters remainingSections remainingAssets
          }
        }
      `;
    
      export const updateJoinCodeMutation = `
        mutation updateJoinCode($input: UpdateJoinCodeInput!) {
          updateJoinCode(input: $input) {
            gameId gameName gameType gameDescription joinCode gmUserId createdAt updatedAt type deleted theme remainingCharacters remainingSections remainingAssets
          }
        }
      `;
    
      export const createSectionMutation = `
        mutation createSection($input: CreateSectionInput!) {
          createSection(input: $input) {
            userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted assets
          }
        }
      `;
    
      export const updateSectionMutation = `
        mutation updateSection($input: UpdateSectionInput!) {
          updateSection(input: $input) {
            userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted assets
          }
        }
      `;
    
      export const deleteSectionMutation = `
        mutation deleteSection($input: DeleteSectionInput!) {
          deleteSection(input: $input) {
            userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted assets
          }
        }
      `;
    
      export const updatePlayerMutation = `
        mutation updatePlayer($input: UpdatePlayerInput!) {
          updatePlayer(input: $input) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted remainingSections
          }
        }
      `;
    
      export const deletePlayerMutation = `
        mutation deletePlayer($input: DeletePlayerInput!) {
          deletePlayer(input: $input) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted remainingSections
          }
        }
      `;
    
      export const createNPCMutation = `
        mutation createNPC($input: CreateNPCInput!) {
          createNPC(input: $input) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted remainingSections
          }
        }
      `;
    
      export const rollDiceMutation = `
        mutation rollDice($input: RollDiceInput!) {
          rollDice(input: $input) {
            gameId playerId playerName dice { ... on SingleDie { __typename type size value } } rollType target grade action diceList { ... on SingleDie { __typename type size value } } value rolledAt rolledBy proxyRoll type messageIndex messageType
          }
        }
      `;
    
      export const updateUserSettingsMutation = `
        mutation updateUserSettings($input: UpdateUserSettingsInput!) {
          updateUserSettings(input: $input) {
            userId settings type createdAt updatedAt
          }
        }
      `;
    
      export const setSystemNotificationMutation = `
        mutation setSystemNotification($input: SetSystemNotificationInput!) {
          setSystemNotification(input: $input) {
            message urgent type createdAt updatedAt
          }
        }
      `;
    
      export const requestAssetUploadMutation = `
        mutation requestAssetUpload($input: RequestAssetUploadInput!) {
          requestAssetUpload(input: $input) {
            asset { gameId sectionId assetId label status mimeType sizeBytes width height createdAt updatedAt type } uploadUrl uploadFields headers
          }
        }
      `;
    
      export const _expireAssetMutation = `
        mutation _expireAsset($input: ExpireAssetInput!) {
          _expireAsset(input: $input) {
            gameId sectionId assetId label status mimeType sizeBytes width height createdAt updatedAt type
          }
        }
      `;
    
      export const _finaliseAssetMutation = `
        mutation _finaliseAsset($input: FinaliseAssetInput!) {
          _finaliseAsset(input: $input) {
            gameId sectionId assetId label status mimeType sizeBytes width height createdAt updatedAt type
          }
        }
      `;
    
      export const deleteAssetMutation = `
        mutation deleteAsset($input: DeleteAssetInput!) {
          deleteAsset(input: $input) {
            gameId sectionId assetId label status mimeType sizeBytes width height createdAt updatedAt type
          }
        }
      `;
    

    
      export const updatedPlayerSubscription = `
        subscription updatedPlayer($gameId: ID!) {
          updatedPlayer(gameId: $gameId) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted remainingSections
          }
        }
      `;
    
      export const updatedSectionSubscription = `
        subscription updatedSection($gameId: ID!) {
          updatedSection(gameId: $gameId) {
            userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted assets
          }
        }
      `;
    
      export const updatedGameSubscription = `
        subscription updatedGame($gameId: ID!) {
          updatedGame(gameId: $gameId) {
            gameId gameName gameType gameDescription joinCode gmUserId createdAt updatedAt type deleted theme remainingCharacters remainingSections remainingAssets
          }
        }
      `;
    
      export const diceRolledSubscription = `
        subscription diceRolled($gameId: ID!) {
          diceRolled(gameId: $gameId) {
            gameId playerId playerName dice { ... on SingleDie { __typename type size value } } rollType target grade action diceList { ... on SingleDie { __typename type size value } } value rolledAt rolledBy proxyRoll type messageIndex messageType
          }
        }
      `;
    
      export const updatedUserSettingsSubscription = `
        subscription updatedUserSettings {
          updatedUserSettings {
            userId settings type createdAt updatedAt
          }
        }
      `;
    
      export const systemNotificationUpdatedSubscription = `
        subscription systemNotificationUpdated {
          systemNotificationUpdated {
            message urgent type createdAt updatedAt
          }
        }
      `;
    
      export const updatedAssetSubscription = `
        subscription updatedAsset($gameId: ID!) {
          updatedAsset(gameId: $gameId) {
            gameId sectionId assetId label status mimeType sizeBytes width height createdAt updatedAt type
          }
        }
      `;
    
  