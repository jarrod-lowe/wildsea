// Code generated by make-schema. DO NOT EDIT
    
      export const getGameQuery = `
        query getGame($input: GetGameInput!) {
          getGame(input: $input) {
            gameId gameName gameType gameDescription playerSheets { userId gameId characterName sections { userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted } type createdAt updatedAt fireflyUserId } joinCode fireflyUserId createdAt updatedAt type deleted theme
          }
        }
      `;
    
      export const getGamesQuery = `
        query getGames {
          getGames {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted
          }
        }
      `;
    
      export const getGameTypesQuery = `
        query getGameTypes($input: GetGameTypesInput!) {
          getGameTypes(input: $input) {
            gameType displayName language
          }
        }
      `;
    
      export const getCharacterTemplatesQuery = `
        query getCharacterTemplates($input: GetCharacterTemplatesInput!) {
          getCharacterTemplates(input: $input) {
            templateName displayName gameType language
          }
        }
      `;
    
      export const getCharacterTemplateQuery = `
        query getCharacterTemplate($input: GetCharacterTemplateInput!) {
          getCharacterTemplate(input: $input) {
            sectionName sectionType content position
          }
        }
      `;
    
      export const getUserSettingsQuery = `
        query getUserSettings {
          getUserSettings {
            userId settings type createdAt updatedAt
          }
        }
      `;
    

    
      export const createGameMutation = `
        mutation createGame($input: CreateGameInput!) {
          createGame(input: $input) {
            gameId gameName gameType gameDescription joinCode fireflyUserId createdAt updatedAt type deleted theme
          }
        }
      `;
    
      export const joinGameMutation = `
        mutation joinGame($input: JoinGameInput!) {
          joinGame(input: $input) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted
          }
        }
      `;
    
      export const updateGameMutation = `
        mutation updateGame($input: UpdateGameInput!) {
          updateGame(input: $input) {
            gameId gameName gameType gameDescription joinCode fireflyUserId createdAt updatedAt type deleted theme
          }
        }
      `;
    
      export const deleteGameMutation = `
        mutation deleteGame($input: DeleteGameInput!) {
          deleteGame(input: $input) {
            gameId gameName gameType gameDescription joinCode fireflyUserId createdAt updatedAt type deleted theme
          }
        }
      `;
    
      export const updateJoinCodeMutation = `
        mutation updateJoinCode($input: UpdateJoinCodeInput!) {
          updateJoinCode(input: $input) {
            gameId gameName gameType gameDescription joinCode fireflyUserId createdAt updatedAt type deleted theme
          }
        }
      `;
    
      export const createSectionMutation = `
        mutation createSection($input: CreateSectionInput!) {
          createSection(input: $input) {
            userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted
          }
        }
      `;
    
      export const updateSectionMutation = `
        mutation updateSection($input: UpdateSectionInput!) {
          updateSection(input: $input) {
            userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted
          }
        }
      `;
    
      export const deleteSectionMutation = `
        mutation deleteSection($input: DeleteSectionInput!) {
          deleteSection(input: $input) {
            userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted
          }
        }
      `;
    
      export const updatePlayerMutation = `
        mutation updatePlayer($input: UpdatePlayerInput!) {
          updatePlayer(input: $input) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted
          }
        }
      `;
    
      export const deletePlayerMutation = `
        mutation deletePlayer($input: DeletePlayerInput!) {
          deletePlayer(input: $input) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted
          }
        }
      `;
    
      export const createNPCMutation = `
        mutation createNPC($input: CreateNPCInput!) {
          createNPC(input: $input) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted
          }
        }
      `;
    
      export const rollDiceMutation = `
        mutation rollDice($input: RollDiceInput!) {
          rollDice(input: $input) {
            gameId playerId playerName dice { ... on SingleDie { __typename type size value } } rollType target grade action diceList { ... on SingleDie { __typename type size value } } value rolledAt rolledBy proxyRoll type messageIndex
          }
        }
      `;
    
      export const updateUserSettingsMutation = `
        mutation updateUserSettings($input: UpdateUserSettingsInput!) {
          updateUserSettings(input: $input) {
            userId settings type createdAt updatedAt
          }
        }
      `;
    

    
      export const updatedPlayerSubscription = `
        subscription updatedPlayer($gameId: ID!) {
          updatedPlayer(gameId: $gameId) {
            userId gameId gameName gameType gameDescription characterName type createdAt updatedAt deleted
          }
        }
      `;
    
      export const updatedSectionSubscription = `
        subscription updatedSection($gameId: ID!) {
          updatedSection(gameId: $gameId) {
            userId gameId sectionId type sectionName sectionType content position createdAt updatedAt deleted
          }
        }
      `;
    
      export const updatedGameSubscription = `
        subscription updatedGame($gameId: ID!) {
          updatedGame(gameId: $gameId) {
            gameId gameName gameType gameDescription joinCode fireflyUserId createdAt updatedAt type deleted theme
          }
        }
      `;
    
      export const diceRolledSubscription = `
        subscription diceRolled($gameId: ID!) {
          diceRolled(gameId: $gameId) {
            gameId playerId playerName dice { ... on SingleDie { __typename type size value } } rollType target grade action diceList { ... on SingleDie { __typename type size value } } value rolledAt rolledBy proxyRoll type messageIndex
          }
        }
      `;
    
      export const updatedUserSettingsSubscription = `
        subscription updatedUserSettings {
          updatedUserSettings {
            userId settings type createdAt updatedAt
          }
        }
      `;
    
  